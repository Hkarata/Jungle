@inherits LayoutComponentBase
@using Microsoft.FluentUI.AspNetCore.Components
@using Jungle.Client.Components.Panels

@inject IDialogService DialogService

<div id="Container">

    <header>
        
        <div id="topBottom">
            
            <div id="top">
                tops
            </div>

            <div id="bottom">
                <Jungle.Client.Components.Menu.TenantNavMenu/>
            </div>

        </div>


        <div id="last">

            <div id="last-left">
                <div class="Rubik-Light" style="font-weight: 600;margin-top: 8px">
                    <span>Tenant ID: </span>
                    <span class="Rubik-Regular" style="color: #2d6ed1; font-weight: 900;">JN-TNT-2024-01</span>
                </div>
                <div>
                </div>
            </div>

            <div id="last-right">

            </div>

        </div>

    </header>

    <div id="Mobile">
        
        <img src="/Images/jungle-logo.svg" width="50" />

        <div class="navHolder" aria-label="Show menu" aria-expanded="false" role="button" tabindex="0" onclick="toggleMenu()">
            <div class="topStick"></div>
            <div class="middleStick"></div>
            <div class="bottomStick"></div>
        </div>
        <div id="menu">
            <Jungle.Client.Components.Menu.TenantNavMenu />
        </div>


        <div id="profile">
            ss
        </div>

    </div>


    <div id="content">
        @Body
        <FluentDialogProvider @rendermode="InteractiveAuto" />
    </div>

</div>

<script type="text/javascript">

    function toggleMenu() {
        const navHolder = document.querySelector('.navHolder');
        navHolder.classList.toggle('active');

        const menu = document.querySelector('#menu');
        menu.style.display = menu.style.display === 'block' ? 'none' : 'block';

        matchDivWidths();
    }

    function matchDivWidths() {
        const div1 = document.getElementById('content');
        const div2 = document.getElementById('menu');

        const div1Width = window.getComputedStyle(div1, null).getPropertyValue("width");

        div2.style.width = (parseFloat(div1Width) - 20) + 'px';
    }

    // Add an event listener to update the width on window resize
    window.addEventListener('resize', matchDivWidths);



</script>

@code {

    private async Task OpenNotificationPanel()
    {
        var dialogParameters = new DialogParameters
            {
                Title = $"Hello",
                Alignment = HorizontalAlignment.Left,
                Modal = false,
                ShowDismiss = false,
                PrimaryAction = "Maybe",
                SecondaryAction = "Cancel",
                Width = "500px",
            };
        await DialogService.ShowPanelAsync<NotificationPanel>(dialogParameters);
    }

}