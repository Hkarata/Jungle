@if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = DisplayMessage.StartsWith("Error") ? "danger" : "success";
    <div class="alert alert-@statusMessageClass Rubik-Light" role="alert">
        @DisplayMessage
    </div>
}

<style>

    .alert{
        border: 2px dashed;
        padding: 5px 10px;
        font-weight: 600;
    }

    .alert-danger{
        border-color: red;
        color: red;
    }

    .alert-success{
        border-color:forestgreen;
        color:forestgreen;
    }

</style>

@code {
    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override void OnInitialized()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }
    }
}
